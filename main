#include<iostream>
#include<iomanip>
#include<stdlib.h>
#include<time.h>
#include<conio.h>
using namespace std;
#define SIZE 4
FILE *High, *Winners;
char Command;
int Board[SIZE][SIZE], Score(0), HighScore(0);
bool f(1);
// Function Declarations
void Out();
void AddNew();
void Move();
void Head();
bool FindMoves();
void Win();
void EndGame();
void Menu();
void Play(bool);
void HowTo();
// Main
int main(void)
{
	if(High=fopen("High.txt", "r"))
	{
	if(feof(High)) HighScore=0;
	else fscanf(High, "%d", &HighScore);
	}
	else High=fopen("High.txt", "w");
	fclose(High);
	srand(time(NULL));
	Menu();
    return 0;
}
// Functions
void Out()
{
	Head();
	cout<<"\n\n\t\t"<<setfill('_')<<setw(33)<<"_"<<endl<<endl<<endl;
	for(int i=0;i<SIZE;i++)
	{
		cout<<"\t\t|";
		for(int j=0;j<SIZE;j++)
		{
		   if(Board[i][j]==0) cout<<setfill(' ')<<setw(4)<<" "<<setw(4)<<"|"; 
		   else cout<<setfill(' ')<<setw(4)<<Board[i][j]<<setw(4)<<"|";
		}
		cout<<endl<<endl<<endl;
	}
	cout<<"\t\t"<<setfill('_')<<setw(33)<<"_"<<endl;
	cout<<endl<<endl<<"\t\tr - restart \t\tq-exit\t";
}
void AddNew()
{
	int a,b,c;
	bool p(0);
	while(p==0)
	{
	  a=rand()%4;
      b=rand()%4;
      c=rand()%8;
	  if(Board[a][b]==0)
	  {
         if(c==0) Board[a][b]=4;
         else Board[a][b]=2;
		 p=1;
	  }
	}
}
void Move()
{
	 f=0;
	 for(int i=0;i<1;i++)
{
	Command=getch();
	if(Command=='r') Play(true);
	else if (Command=='q') exit(0);
	else if(Command=='w')
	{
      for(int k=0;k<3;k++)
	  {
		for(int i=1; i<SIZE;i++)
		{
			for(int j=0; j<SIZE; j++)
			{
				if(Board[i][j]!=0 && Board[i-1][j]==0)
				{
					Board[i-1][j]=Board[i][j];
					Board[i][j]=0;
					f=1;
				}
			}
		}
	  }
		for(int i=1; i<SIZE;i++)
		{
			for(int j=0; j<SIZE; j++)
			{
				if(Board[i][j]!=0)
				{
					if(Board[i-1][j]==Board[i][j])
						{
							Board[i-1][j]*=2;
							Board[i][j]=0;
							Score+=Board[i-1][j];
					    }
				}
			}
		}	
		for(int i=1; i<SIZE;i++)
		{
			for(int j=0; j<SIZE; j++)
			{
				if(Board[i][j]!=0 && Board[i-1][j]==0)
				{
					Board[i-1][j]=Board[i][j];
					Board[i][j]=0;
					f=1;
				}
			}
		}
	}

	else if(Command=='s')
	{
	  for(int k=0;k<3;k++)
	  {
		for(int i=SIZE-2;i>=0;i--)
		{
			for(int j=SIZE-1;j>=0;j--)
			{
				if(Board[i][j]!=0 && Board[i+1][j]==0)
				{
					Board[i+1][j]=Board[i][j];
					Board[i][j]=0;
					f=1;
				}
			}
		}
      }
		for(int i=SIZE-2;i>=0;i--)
		{
			for(int j=SIZE-1;j>=0;j--)
			{
				if(Board[i][j]!=0)
				{
					if(Board[i][j]==Board[i+1][j])
					{
						Board[i+1][j]*=2;
						Board[i][j]=0;
						Score+=Board[i+1][j];
					}
				}
			}
		}
		for(int i=SIZE-2;i>=0;i--)
		{
			for(int j=SIZE-1;j>=0;j--)
			{
				if(Board[i][j]!=0 && Board[i+1][j]==0)
				{
					Board[i+1][j]=Board[i][j];
					Board[i][j]=0;
					f=1;
				}
			}
		}
	}
	else if(Command=='d')
	{
	 for(int k=0;k<3;k++)
	 {
	    for(int i=SIZE-1;i>=0;i--)
	    {
		   for(int j=SIZE-2;j>=0;j--)
		   {
			  if(Board[i][j]!=0)
			  {
			     if(Board[i][j+1]==0)
				 {
				    Board[i][j+1]=Board[i][j];
				    Board[i][j]=0;
				    f=1;
				 }
			  }
			}
		  }
	    }
	 for(int i=SIZE-1;i>=0;i--)
	 {
		 for(int j=SIZE-2;j>=0;j--)
		 {
			 if(Board[i][j]!=0)
			 {
				 if(Board[i][j]==Board[i][j+1])
				 {
					 Board[i][j+1]*=2;
					 Board[i][j]=0;
					 f=1;
				 }
			 }
		 }
	 }
	 for(int i=SIZE-1;i>=0;i--)
	    {
		   for(int j=SIZE-2;j>=0;j--)
		   {
			  if(Board[i][j]!=0)
			  {
			     if(Board[i][j+1]==0)
				 {
				    Board[i][j+1]=Board[i][j];
				    Board[i][j]=0;
				    f=1;
				 }
			  }
			}
		  }
    }
	else if(Command=='a')
	{
      for(int k=0;k<3;k++)
	  {
		for(int i=0;i<SIZE;i++)
		{
			for(int j=1;j<SIZE;j++)
			{
				if(Board[i][j]!=0 && Board[i][j-1]==0)
				{
					Board[i][j-1]=Board[i][j];
					Board[i][j]=0;
					f=1;
				}
			}
		}
	  }
		for(int i=0;i<SIZE;i++)
		{
			for(int j=1;j<SIZE;j++)
			{
				if(Board[i][j]!=0)
				{
					if(Board[i][j-1]==Board[i][j])
					{
						Board[i][j-1]*=2;
						Board[i][j]=0;
						Score+=Board[i][j-1];
					}
				}
			}
		}
		for(int i=0;i<SIZE;i++)
		{
			for(int j=1;j<SIZE;j++)
			{
				if(Board[i][j]!=0 && Board[i][j-1]==0)
				{
					Board[i][j-1]=Board[i][j];
					Board[i][j]=0;
					f=1;
				}
			}
		}
	} 
}
}
void Head()
{
	cout<<"\t\t"<<setfill('*')<<setw(33)<<"*"<<endl;
	cout<<"\t\t|"<<setfill(' ')<<setw(18)<<"2048"<<setw(14)<<"|"<<endl;
	cout<<"\t\t"<<setfill('*')<<setw(33)<<"*"<<endl<<endl;
	cout<<"\t\t Score: "<<Score<<"\tHighscore: "<<HighScore;

}
bool FindMoves()
{
	for(int i=0;i<SIZE;i++)
	{
		for(int j=1;j<SIZE;j++)
		{
			if(Board[i][j]==Board[i][j-1]) return 1;
		}
	}
	for(int i=1;i<SIZE;i++)
	{
		for(int j=0;j<SIZE;j++)
		{
			if(Board[i][j]==Board[i-1][j]) return 1;
		}
	}
	return 0;
}
void EndGame()
{
	system("CLS");
	cout<<"\n\n\n\t\tGAME OVER\n";
	if(Score>HighScore)
	{
		freopen("High.txt", "w", High);
		fprintf (High, "%d ", Score);
		cout<<"\n\t\tNew Highscore!\n\t\t"<<Score;
	}
	else cout<<"\n\t\tYour Score: "<<Score;
	cout<<"\n\t\t1.Play Again\n\t\t2. Go To Menu\n\t\t0.Exit";
	short action(-1); bool g(0);
	while(!g)
	{
		cout<<"\n\n\n\t\tYour choice ---> ";
		cin>>action;
		if(action==0) exit(0);
		else if(action==1) {g=1; Play(1);}
		else if(action==2) {g=1;Menu();}
		else cout<<"\nError. Enter Correct Command\n";
	}

}
void Win()
{
	bool p(0);
	char Name[25];
	for(int i=0;i<SIZE;i++)
	{
		for(int j=0;j<SIZE;j++)
		{
			if(Board[i][j]==2048) p=1;
		}
	}
	if(p==1)
	{
		system("CLS");
		cout<<"\t\tCONGRATULATIONS!\n\t\tYOU WIN!\n";
		cout<<"\n\n\t\tEnter your name ---> "; cin>>Name;
		Winners=fopen("Winners.txt", "a");
		fputs (Name, Winners);
		cout<<"\n\t\t1.Play Again\n\t\t2. Go To Menu\n\t\t0.Exit";
	short action(-1); bool g(0);
	while(!g)
	{
		cout<<"\n\t\tYour choice ---> ";
		cin>>action;
		if(action==0) exit(0);
		else if(action==1) {g=1; Play(1);}
		else if(action==2) {g=1;Menu();}
		else cout<<"\nError. Enter Correct Command\n";
	}

	}
}
void Menu()
{
	bool g(0);
	system("CLS");
	while(!g)
	{
	cout<<"\t\t"<<setfill('*')<<setw(33)<<"*"<<endl;
	cout<<"\t\t|"<<setfill(' ')<<setw(18)<<"2048"<<setw(14)<<"|"<<endl;
	cout<<"\t\t"<<setfill('*')<<setw(33)<<"*"<<endl<<endl;
	cout<<"\t\t1. New Game\n\t\t2. How To Play\n\t\t0. Exit\n";
	short action(-1);
	while(!g)
	{
	cout<<"\t\tYour Choice ---> "; cin>>action;
	if(action==0) exit(0);
	else if(action==1) {g=1;Play(1);}
	else if(action==2) {g=1;HowTo();}
	else cout<<"\n\t\tError. Enter Correct Command\n";
	}
	}
}
void Play(bool Moves)
{
	system("CLS");
	for(int i=0;i<SIZE;i++)
    {
	  for(int j=0;j<SIZE;j++) Board[i][j]=0;
    }

    AddNew();
    while(true)
    {
	  Out();
	  Move();
	  Moves=FindMoves();
	  Win();
	  if(!Moves) break;
	  if(f==1) AddNew();
	  system("CLS");

    }
	EndGame();
}
void HowTo()
{
	system("CLS");
	cout<<"\t\tComing Soon";
}
